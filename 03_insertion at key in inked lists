#include <stdio.h>
#include <stdlib.h>

// Definition of a linked list node
struct Node {
    int data;
    struct Node* next;
};

// Function to create and return a new node
struct Node* createNode(int data) {
    struct Node* newNode
        = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = data;
    newNode->next = NULL;
    return newNode;
}

// Function to insert a new node after a given node and
// return the head of modified list
struct Node* insertAfter(struct Node* head, int key,
                         int newData) {
  
    // Initialize curr Pointer to head
    struct Node* curr = head;

    // Iterate over Linked List to find the key
    while (curr != NULL) {
        if (curr->data == key)
            break;
        curr = curr->next;
    }

    // if curr becomes NULL means, given key is not found in
    // linked list
    if (curr == NULL) {
        printf("Node not found\n");
        // Return the head of the original linked list
        return head;
    }

    // Allocate new node and make the element to be inserted
    // as a new node
    struct Node* newNode
        = (struct Node*)malloc(sizeof(struct Node));
    newNode->data = newData;

    // Set the next pointer of new node to the next pointer
    // of given node
    newNode->next = curr->next;

    // Change the next pointer of given node to the new node
    curr->next = newNode;

    // Return the head of the modified linked list
    return head;
}

// Function to print the linked list
void printList(struct Node* node) {
    while (node != NULL) {
        printf("%d ", node->data);
        node = node->next;
    }
    printf("\n");
}

// Driver code
int main() {
  	
    // Create the linked list 2 -> 3 -> 5 -> 6
    struct Node* head = createNode(2);
    head->next = createNode(3);
    head->next->next = createNode(5);
    head->next->next->next = createNode(6);

    printf("Original Linked List: ");
    printList(head);

    // Key: Insert node after key
    int key = 3, newData = 4;

    // Insert a new node with data 4 after the node with data 3
    head = insertAfter(head, key, newData);

    printf("Linked List after insertion: ");
    printList(head);

    return 0;
}
